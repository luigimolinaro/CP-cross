# Based on https://github.com/tchiotludo/akhq

- name: Create AKHQ directory for generated files
  ansible.builtin.file:
    path: "{{ akhq_output_directory }}"
    state: directory
    mode: u+rwx

- name: Create Project
  ansible.builtin.include_role:
    name: common
    tasks_from: create-project
  vars:
    common_namespace_name: akhq
    common_output_directory: "{{ akhq_output_directory }}"

- name: Add helm-akhq chart repo
  kubernetes.core.helm_repository:
    name: helm-akhq
    repo_url: "https://akhq.io/"

- name: Import trusted CA from SSL certificate
  community.general.java_cert:
    cert_url: "iaf-system-kafka-bootstrap-{{ akhq_cp4ba_project_name }}.{{ apps_endpoint_domain }}"
    keystore_path: "{{ akhq_output_directory }}/truststore.jks"
    keystore_pass: "{{ akhq_universal_password }}"
    keystore_create: true
    state: present
    cert_alias: iaf-ca

- name: Load jks data
  ansible.builtin.slurp:
    src: "{{ akhq_output_directory }}/truststore.jks"
  register: slurped_jks_data

- name: Decode data and store as fact
  ansible.builtin.set_fact:
    _jks: "{{ slurped_jks_data.content }}"

- name: Get OCP Apps Endpoint
  ansible.builtin.include_role:
    name: common
    tasks_from: apps-endpoint
  vars:
    common_output_to_var: "apps_endpoint_domain"
  when: apps_endpoint_domain is not defined

- name: Prepare yaml file for values of helm chart
  ansible.builtin.template:
    src: values.yaml.j2
    dest: "{{ akhq_output_directory }}/values.yaml"
    mode: u+rwx

- name: Deploy akhq chart using values files on target
  kubernetes.core.helm:
    name: akhq
    chart_ref: helm-akhq/akhq
    chart_version: "{{ akhq_chart_version }}"
    release_namespace: akhq
    values_files:
      - "{{ akhq_output_directory }}/values.yaml"

- name: Crete Edge Route
  ansible.builtin.include_role:
    name: common
    tasks_from: create-edge-route
  vars:
    common_namespace_name: akhq
    common_route_name: akhq
    common_service_name: akhq
    common_service_port: http
    common_apps_endpoint_domain: "{{ apps_endpoint_domain }}"
    common_output_directory: "{{ akhq_output_directory }}"

- name: Wait for akhq Deployment to be Available
  ansible.builtin.include_role:
    name: common
    tasks_from: wait-resource-condition
  vars:
    common_api_version: apps/v1
    common_resource_kind: Deployment
    common_resource_name: akhq
    common_resource_namespace: akhq
    common_condition_name: Available
    common_retries: 60
    common_delay: 15
